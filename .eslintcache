[{"E:\\project\\react\\cafe\\src\\index.js":"1","E:\\project\\react\\cafe\\src\\App.js":"2","E:\\project\\react\\cafe\\src\\reportWebVitals.js":"3","E:\\project\\react\\cafe\\src\\header\\Nav.js":"4","E:\\project\\react\\cafe\\src\\header\\MenuItems.js":"5","E:\\project\\react\\cafe\\src\\landing\\Index.js":"6","E:\\project\\react\\cafe\\src\\landing\\CountDown.js":"7","E:\\project\\react\\cafe\\src\\component\\product\\Product.js":"8","E:\\project\\react\\cafe\\src\\component\\location\\Location.js":"9","E:\\project\\react\\cafe\\src\\component\\product\\Card.js":"10","E:\\project\\react\\cafe\\src\\component\\special\\Special.js":"11","E:\\project\\react\\cafe\\src\\component\\special\\Discount.js":"12","E:\\project\\react\\cafe\\src\\component\\image\\Index.js":"13","E:\\project\\react\\cafe\\src\\component\\contact-section\\ContactSection.js":"14","E:\\project\\react\\cafe\\src\\component\\contact-section\\Info.js":"15","E:\\project\\react\\cafe\\src\\component\\contact-section\\Form.js":"16","E:\\project\\react\\cafe\\src\\header\\login\\Login.js":"17","E:\\project\\react\\cafe\\src\\Routes.js":"18","E:\\project\\react\\cafe\\src\\Base.js":"19","E:\\project\\react\\cafe\\src\\header\\login\\Signup.js":"20"},{"size":533,"mtime":1609624028741,"results":"21","hashOfConfig":"22"},{"size":856,"mtime":1609628685513,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1423,"mtime":1609629790917,"results":"25","hashOfConfig":"22"},{"size":290,"mtime":1608785582771,"results":"26","hashOfConfig":"22"},{"size":507,"mtime":1609626452102,"results":"27","hashOfConfig":"22"},{"size":2344,"mtime":1609628702139,"results":"28","hashOfConfig":"22"},{"size":394,"mtime":1609626396360,"results":"29","hashOfConfig":"22"},{"size":871,"mtime":1609626556635,"results":"30","hashOfConfig":"22"},{"size":687,"mtime":1609626354515,"results":"31","hashOfConfig":"22"},{"size":515,"mtime":1609299244840,"results":"32","hashOfConfig":"22"},{"size":2283,"mtime":1609626849435,"results":"33","hashOfConfig":"22"},{"size":301,"mtime":1608762467242,"results":"34","hashOfConfig":"22"},{"size":888,"mtime":1609635248557,"results":"35","hashOfConfig":"22"},{"size":1361,"mtime":1609624452764,"results":"36","hashOfConfig":"22"},{"size":1531,"mtime":1609648541933,"results":"37","hashOfConfig":"22"},{"size":2104,"mtime":1609634840299,"results":"38","hashOfConfig":"22"},{"size":520,"mtime":1609625400504,"results":"39","hashOfConfig":"22"},{"size":269,"mtime":1609628645726,"results":"40","hashOfConfig":"22"},{"size":269,"mtime":1609626441652,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"13ggjju",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"E:\\project\\react\\cafe\\src\\index.js",[],["86","87"],"E:\\project\\react\\cafe\\src\\App.js",[],"E:\\project\\react\\cafe\\src\\reportWebVitals.js",[],"E:\\project\\react\\cafe\\src\\header\\Nav.js",[],"E:\\project\\react\\cafe\\src\\header\\MenuItems.js",[],"E:\\project\\react\\cafe\\src\\landing\\Index.js",[],"E:\\project\\react\\cafe\\src\\landing\\CountDown.js",["88"],"import React, { useEffect, useState } from \"react\";\nimport Slide from \"react-reveal/Slide\";\nimport \"./Countdown.css\";\n\nfunction CountDown() {\n  const [values, setValues] = useState({\n    deadLine: \"Jan, 20, 2021\",\n    days: \"0\",\n    hours: \"0\",\n    minutes: \"0\",\n    seconds: \"0\",\n  });\n  const { deadLine, days, hours, minutes, seconds } = values;\n  const getTimeCount = deadline => {\n    const time = Date.parse(deadline) - Date.parse(new Date());\n    if (time < 0) {\n      console.log(\"Event already closed\");\n    } else {\n      const seconds = Math.floor((time / 1000) % 60);\n      const minutes = Math.floor((time / 1000 / 60) % 60);\n      const hours = Math.floor((time / (1000 * 60 * 60)) % 24);\n      const days = Math.floor(time / (1000 * 60 * 60 * 24));\n      setValues({ ...values, days, hours, minutes, seconds });\n    }\n  };\n  const checkforDigit = num => {\n    if (num >= 0 && num < 10) {\n      return \"0\" + num;\n    }\n    return num;\n  };\n\n  useEffect(() => {\n    setInterval(() => {\n      getTimeCount(deadLine, 1000);\n    });\n  }, []);\n\n  return (\n    <Slide left delay={1000}>\n      <div className=\"countdown_wrapper\">\n        <div className=\"countdown_top\">Event Starts In</div>\n\n        <div className=\"countdown_bottom\">\n          <div className=\"countdown_item\">\n            <div className=\"countdown_time\">\n              <div className=\"time\">{checkforDigit(days)}</div>\n              <div className=\"countdown_tag\">Days</div>\n            </div>\n          </div>\n\n          <div className=\"countdown_item\">\n            <div className=\"countdown_time\">\n              <div className=\"time\">{checkforDigit(hours)}</div>\n              <div className=\"countdown_tag\">Hours</div>\n            </div>\n          </div>\n\n          <div className=\"countdown_item\">\n            <div className=\"countdown_time\">\n              <div className=\"time\">{checkforDigit(minutes)}</div>\n              <div className=\"countdown_tag\">Minutes</div>\n            </div>\n          </div>\n\n          <div className=\"countdown_item\">\n            <div className=\"countdown_time\">\n              <div className=\"time\">{checkforDigit(seconds)}</div>\n              <div className=\"countdown_tag\">Seconds</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* </Col>\n      </Row> */}\n    </Slide>\n  );\n}\n\nexport default CountDown;\n","E:\\project\\react\\cafe\\src\\component\\product\\Product.js",[],"E:\\project\\react\\cafe\\src\\component\\location\\Location.js",[],"E:\\project\\react\\cafe\\src\\component\\product\\Card.js",[],"E:\\project\\react\\cafe\\src\\component\\special\\Special.js",[],"E:\\project\\react\\cafe\\src\\component\\special\\Discount.js",[],"E:\\project\\react\\cafe\\src\\component\\image\\Index.js",[],"E:\\project\\react\\cafe\\src\\component\\contact-section\\ContactSection.js",["89"],"import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport Info from \"./Info\";\r\nimport \"./contact-section.css\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nconst formInputs = [\r\n  {\r\n    id: \"name\",\r\n    type: \"text\",\r\n    label: \"Your name\",\r\n    placeholder: \"Enter your name\",\r\n  },\r\n  {\r\n    id: \"tel\",\r\n    type: \"tel\",\r\n    label: \"Phone number\",\r\n    placeholder: \"Enter phone number\",\r\n  },\r\n  {\r\n    id: \"email\",\r\n    type: \"email\",\r\n    label: \"Email address\",\r\n    placeholder: \"Enter email\",\r\n  },\r\n  {\r\n    id: \"message\",\r\n    type: \"textarea\",\r\n    label: \"Your message\",\r\n    placeholder: \"How can we help you? Or you us?\",\r\n  },\r\n];\r\nconst ContactSection = () => (\r\n  <>\r\n    <div className=\"contact-section\">\r\n      <Row>\r\n        <Col>\r\n          <Form />\r\n          <Info />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default ContactSection;\r\n","E:\\project\\react\\cafe\\src\\component\\contact-section\\Info.js",[],"E:\\project\\react\\cafe\\src\\component\\contact-section\\Form.js",["90"],"E:\\project\\react\\cafe\\src\\header\\login\\Login.js",["91","92","93","94","95"],"import React, { useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport Base from \"../../Base\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: \"\",\r\n    loading: false,\r\n    didRedirect: false,\r\n  });\r\n  const { email, password, error, loading, didRedirect } = values;\r\n\r\n  const handleChange = name => event => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n    // signin({ email, password })\r\n    //   .then(data => {\r\n    //     if (data.error) {\r\n    //       setValues({ ...values, error: data.error, loading: false });\r\n    //     } else {\r\n    //       authenticate(data, () => {\r\n    //         setValues({ ...values, didRedirect: true });\r\n    //       });\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n  return (\r\n    <Base>\r\n      <Row className=\"cafe__login\">\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <h2>Login Page</h2>\r\n          <h3>{JSON.stringify(values)}</h3>\r\n          <Form validated={false}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={handleChange(\"email\")}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChange(\"password\")}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={() => onSubmit()}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Base>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","E:\\project\\react\\cafe\\src\\Routes.js",[],"E:\\project\\react\\cafe\\src\\Base.js",[],"E:\\project\\react\\cafe\\src\\header\\login\\Signup.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":37,"column":6,"nodeType":"102","endLine":37,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":6,"column":7,"nodeType":"106","messageId":"107","endLine":6,"endColumn":17},{"ruleId":"104","severity":1,"message":"108","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":15,"column":11,"nodeType":"106","messageId":"107","endLine":15,"endColumn":16},{"ruleId":"104","severity":1,"message":"110","line":15,"column":18,"nodeType":"106","messageId":"107","endLine":15,"endColumn":26},{"ruleId":"104","severity":1,"message":"111","line":15,"column":28,"nodeType":"106","messageId":"107","endLine":15,"endColumn":33},{"ruleId":"104","severity":1,"message":"112","line":15,"column":35,"nodeType":"106","messageId":"107","endLine":15,"endColumn":42},{"ruleId":"104","severity":1,"message":"113","line":15,"column":44,"nodeType":"106","messageId":"107","endLine":15,"endColumn":55},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deadLine' and 'getTimeCount'. Either include them or remove the dependency array.","ArrayExpression",["116"],"no-unused-vars","'formInputs' is assigned a value but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'didRedirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},"Update the dependencies array to be: [deadLine, getTimeCount]",{"range":"119","text":"120"},[1048,1050],"[deadLine, getTimeCount]"]